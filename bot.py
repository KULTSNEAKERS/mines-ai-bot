from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
from collections import defaultdict

TOKEN = "8468958146:AAHtc7OZzxyhIBWmqDvwq7Xv61F3KU3UL9A"
REF_LINK = "https://bc.game/i-3to5iziqh-n/"
CHANNEL_LINK = "https://t.me/minesaipredictor"
ADMIN_ID = 939790185  # —Ç–≤–æ–π Telegram ID

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤
user_data = defaultdict(lambda: {"free": 3, "reg_bonus": 0, "registered": False})

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üî• –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑", callback_data="get_prediction")],
        [InlineKeyboardButton("üì° –ö–∞–Ω–∞–ª —Å –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏", url=CHANNEL_LINK)],
        [InlineKeyboardButton("üé∞ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ BC Game", url=REF_LINK)]
    ])

# –ú–µ–Ω—é –≤–Ω—É—Ç—Ä–∏ "–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑"
def back_menu():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ])

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        text=(
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî AI-–±–æ—Ç —Å –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏ –¥–ª—è –∏–≥—Ä—ã *Mines*.\n\n"
            "üîÆ –ü–æ–ª—É—á–∏ —Ç–æ—á–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –∏ –Ω–∞—á–Ω–∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!\n\n"
            "‚ö†Ô∏è –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø ‚Äî —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è:\n"
            f"[üëâ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è]({REF_LINK})"
        ),
        reply_markup=main_menu(),
        parse_mode="Markdown"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    user = user_data[user_id]

    # –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑
    if query.data == "get_prediction":
        # –ê–¥–º–∏–Ω ‚Äî –±–µ–∑–ª–∏–º–∏—Ç
        if user_id == ADMIN_ID:
            await query.edit_message_text("üéØ –ü—Ä–æ–≥–Ω–æ–∑: üí£ –≤ –∫–ª–µ—Ç–∫–µ C3\n(–¢—ã –∞–¥–º–∏–Ω, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–µ—Ç)", reply_markup=back_menu())
            return

        if user["free"] > 0:
            user["free"] -= 1
            await query.edit_message_text(
                f"üéØ –ü—Ä–æ–≥–Ω–æ–∑: üí£ –≤ –∫–ª–µ—Ç–∫–µ B2\n\nüì¶ –û—Å—Ç–∞–ª–æ—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø—Ä–æ–≥–Ω–æ–∑–æ–≤: {user['free']}",
                reply_markup=back_menu()
            )
        elif not user["registered"]:
            await query.edit_message_text(
                "‚ö†Ô∏è –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.\n\n"
                f"üëâ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –Ω–∞ BC Game –ø–æ —Å—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ—â—ë 5 –ø—Ä–æ–≥–Ω–æ–∑–æ–≤:\n{REF_LINK}\n\n"
                "–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ‚Äî –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("‚úÖ –Ø –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è", callback_data="confirm_register")],
                    [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
                ])
            )
        elif user["reg_bonus"] > 0:
            user["reg_bonus"] -= 1
            await query.edit_message_text(
                f"üéØ –ü—Ä–æ–≥–Ω–æ–∑: üí£ –≤ –∫–ª–µ—Ç–∫–µ A1\n\nüì¶ –û—Å—Ç–∞–ª–æ—Å—å –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user['reg_bonus']}",
                reply_markup=back_menu()
            )
        else:
            await query.edit_message_text(
                "‚ö†Ô∏è –ü—Ä–æ–≥–Ω–æ–∑—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.\n\nüîÑ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ—â—ë!",
                reply_markup=back_menu()
            )

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    elif query.data == "confirm_register":
        user["registered"] = True
        user["reg_bonus"] = 5
        await query.edit_message_text(
            "‚úÖ –ì–æ—Ç–æ–≤–æ! –¢—ã –ø–æ–ª—É—á–∏–ª –µ—â—ë 5 –ø—Ä–æ–≥–Ω–æ–∑–æ–≤.\n\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üìä –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑", callback_data="get_prediction")],
                [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
            ])
        )

    # –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    elif query.data == "back_to_main":
        await query.edit_message_text(
            "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=main_menu()
        )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(button))
app.run_polling()
